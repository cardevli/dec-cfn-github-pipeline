name: Deploy CfCT via GitHub Pipeline
# test7

on: 
  push:
    branches:
      - development
      # - production
  
env: 
  TARGET_REGION: us-east-1
  AWS_CT_DEV_ACCOUNT: '928700945928'
  # AWS_CT_PROD_ACCOUNT: '1111111111'
  GITHUB_PIPELINE_ROLE: 'github-cfct-pipeline-role'
  CFCT_CUSTOMIZATIONS_PATH: 'codes/cfct-modules'
  GITHUB_REPO_NAME: 'cardevli/dec-cfn-github-pipeline-2'

permissions:
  id-token: write
  contents: read

jobs:
  configure_aws_credentials: 
    runs-on: ubuntu-latest
    steps: 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ env.TARGET_REGION }}
        role-to-assume: arn:aws:iam::${{ env.AWS_CT_DEV_ACCOUNT }}:role/${{ env.GITHUB_PIPELINE_ROLE }}
        role-session-name: myGitHubActions

  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Validate code with cfn-nag
      uses: stelligent/cfn_nag@master
      with:
        input_path: ${{ env.CFCT_CUSTOMIZATIONS_PATH }}/*    

  create_zip_upload_to_dev_s3:
    runs-on: ubuntu-latest
    if: github.ref_name == 'development'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials for dev account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_CT_DEV_ACCOUNT }}:role/${{ env.GITHUB_PIPELINE_ROLE }}
          aws-region: ${{ env.TARGET_REGION }}
      - name: Create ZIP file
        run: |
          cd $CFCT_CUSTOMIZATIONS_PATH
          zip -r custom-control-tower-configuration.zip *
      - name: Create cfct configuration artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-control-tower-configuration.zip
          path: ${{ env.CFCT_CUSTOMIZATIONS_PATH }}/custom-control-tower-configuration.zip
      - name:  Copy custom-control-tower-configuration.zip to dev s3
        run: |
          echo "Uploading customization zip to CT Dev S3 Bucket"
          aws s3 cp $CFCT_CUSTOMIZATIONS_PATH/custom-control-tower-configuration.zip s3://custom-control-tower-configuration-$AWS_CT_DEV_ACCOUNT-$TARGET_REGION

  create_zip_upload_to_prod_s3:
    runs-on: ubuntu-latest
    if: github.ref_name == 'production'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials for dev account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_CT_PROD_ACCOUNT }}:role/${{ env.GITHUB_PIPELINE_ROLE }}
          aws-region: ${{ env.TARGET_REGION }}
      - name: Create ZIP file
        run: |
          cd $CFCT_CUSTOMIZATIONS_PATH
          zip -r custom-control-tower-configuration.zip *
      - name: Create cfct configuration artifact
        uses: actions/upload-artifact@v3
        with:
          name: custom-control-tower-configuration.zip
          path: ${{ env.CFCT_CUSTOMIZATIONS_PATH }}/custom-control-tower-configuration.zip
      - name:  Copy custom-control-tower-configuration.zip to dev s3
        run: |
          echo "Uploading customization zip to CT Prod S3 Bucket"
          aws s3 cp $CFCT_CUSTOMIZATIONS_PATH/custom-control-tower-configuration.zip s3://custom-control-tower-configuration-$AWS_CT_PROD_ACCOUNT-$TARGET_REGION